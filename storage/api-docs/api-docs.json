{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel JWT API",
        "description": "API documentation for the Laravel JWT authentication system",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "Rental API Server"
        },
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Logs in a user and returns a JWT token if the credentials are valid.",
                "operationId": "3d1aae0ea009e03fadebec819afd774e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Email not verified"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user account and sends an email verification link.",
                "operationId": "f8f20d8e5fa3ee0d9ab537e9ac6206b5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "email_verified_at": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1N..."
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error occurred while creating the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while trying to create user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/resend-email-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification link",
                "description": "Resends the email verification link to the user's registered email.",
                "operationId": "42c4d29f17adc6532541257c375a5231",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email resent"
                    },
                    "400": {
                        "description": "Invalid email address"
                    }
                }
            }
        },
        "/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user email",
                "description": "Verifies the user's email using the provided token.",
                "operationId": "413607804bd1fc0ae7f5343ec4f2046c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "sample_verification_token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully"
                    },
                    "400": {
                        "description": "Invalid verification token"
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Return JWT access token",
                "description": "Returns a JWT access token for authenticated users.",
                "operationId": "2a5bbbbeebcb4771f309a6bc7e59acc3",
                "responses": {
                    "200": {
                        "description": "Token response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TokenResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "user": {
                        "type": "object"
                    },
                    "access_token": {
                        "type": "string",
                        "example": "your_jwt_token"
                    },
                    "type": {
                        "type": "string",
                        "example": "bearer"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}